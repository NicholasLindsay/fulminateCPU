Test Program 1:	Add two 32 bit numbers, storing result in memory.
This program assumes address registers are initially 0

.code
	GET r0, (Number1); -- load MSB into r0
		4020
	GET r1, (Number1 + 1); -- Load LSB into r1
		4122
	ADD r1, (Number2 + 1); -- Add Number2 LSB onto r1
		8114 0026
	ADC r0, (Number2); -- finish addition
		9014 0024
	STW r0, (Result); -- store result
		48BE
	STW r1, (Result + 1);
		49BF
.data
Number1:	0x01234567 (address = 32 = 100000b)
Number2:	0x89abcdef (address = 36 = 0x24)

.bss
Result: resw 2;

Test Program 2: Count down from 1 to 0, then exit
.code
		GET smth -- need an assembler!
			D7 8F
		SET smth
			DF 41
		GET r2, 3; 
			F2 03 -- addr 0
loop:	CMPI r2, 0;
			E9 00 -- addr 2
		BEQ done;
			28 02 -- addr 4
		SUBI r2, 1;
			C9 01 -- addr 6
		BRA LOOP;
			3F FC -- addr 8
done:	BRA done; -- infinite loop
			3F FF -- addr a
		
